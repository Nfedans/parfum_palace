{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_client_side_react\\\\client\\\\src\\\\components\\\\LoginForm.js\";\nimport React, { Component } from \"react\";\nexport default class LoginForm extends React.Component {\n  constructor() {\n    super();\n\n    this.handleEmailChange = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePasswordChange = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        wasSubmittedAtLeastOnce: true\n      });\n      const formInputsState = this.validate();\n\n      if (Object.keys(formInputsState).every(index => formInputsState[index])) {\n        const _this$state = this.state,\n              email = _this$state.email,\n              password = _this$state.password;\n        alert(\"Registered details to be submitted are...    email: \".concat(email, \" password: \").concat(password));\n      } else // invalid inputs in form\n        {\n          e.preventDefault();\n          return;\n        }\n    };\n\n    this.state = {\n      email: \"\",\n      password: \"\",\n      wasSubmittedAtLeastOnce: false\n    };\n  }\n\n  validateEmail() {\n    // valid email pattern\n    const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return pattern.test(String(this.state.email).toLowerCase());\n  }\n\n  validatePassword() {\n    const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\n    return pattern.test(String(this.state.password));\n  }\n\n  validate() {\n    const email = this.state.email;\n    const password = this.state.password;\n    return {\n      email: this.validateEmail(),\n      password: this.validatePassword()\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Login Details are incorrect\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"form\", {\n      noValidate: true,\n      id: \"loginForm\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, errorMessage, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      onChange: this.handleEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      onChange: this.handlePasswordChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_client_side_react\\client\\src\\components\\LoginForm.js"],"names":["React","Component","LoginForm","constructor","handleEmailChange","e","setState","email","target","value","handlePasswordChange","password","handleSubmit","wasSubmittedAtLeastOnce","formInputsState","validate","Object","keys","every","index","state","alert","preventDefault","validateEmail","pattern","test","String","toLowerCase","validatePassword","render","errorMessage"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class LoginForm extends React.Component \n{\n    constructor() \n    {\n        super();\n        this.state = \n        {\n            email: \"\",\n            password: \"\",\n            wasSubmittedAtLeastOnce:false\n        };\n    }\n\n\n    handleEmailChange = e => \n    {\n        this.setState({ email: e.target.value });\n    };\n\n\n    handlePasswordChange = e => \n    {\n        this.setState({ password: e.target.value });\n    };\n\n\n    handleSubmit = e => \n    {        \n        this.setState({ wasSubmittedAtLeastOnce: true });\n        const formInputsState = this.validate();\n    \n        if (Object.keys(formInputsState).every(index => formInputsState[index])) \n        {\n            const { email, password } = this.state;\n            alert(`Registered details to be submitted are...    email: ${email} password: ${password}`);\n        }\n        else // invalid inputs in form\n        {\n            e.preventDefault();\n            return;    \n        }\n    };\n\n\n    validateEmail()\n    {    \n        // valid email pattern\n        const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return pattern.test(String(this.state.email).toLowerCase());\n    }\n\n\n    validatePassword()\n    {    \n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\n        return pattern.test(String(this.state.password)); \n    }\n\n    validate() \n    {\n        const email = this.state.email;\n        const password = this.state.password;\n        return {\n            email: this.validateEmail(),\n            password: this.validatePassword()\n        };\n    }\n\n\n    render() \n    {\n        let errorMessage = \"\";\n        if(this.state.wasSubmittedAtLeastOnce)\n        {\n            errorMessage = <div className=\"error\">Login Details are incorrect<br/></div>;\n        }\n         \n        return (          \n          <form noValidate = {true} id = \"loginForm\" onSubmit = {this.handleSubmit}>\n            {errorMessage}\n            \n            <input     \n\t\t\t    name = \"email\"           \n                type = \"email\"\n                placeholder = \"Email\"\n                value = {this.state.email}\n                onChange = {this.handleEmailChange}\n            />\n            \n               \n            <input       \n\t\t\t  name = \"password\"      \n              type = \"password\"\n              placeholder = \"Password\"\n              value = {this.state.password}\n              onChange = {this.handlePasswordChange}\n            />\n\n                                    \n            <input \n              type = \"submit\" \n              value = \"Login\" \n            />\n          </form>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}