{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_client_side_react\\\\cars_react_app\\\\client\\\\src\\\\components\\\\Register.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const userObject = {\n        name: this.state.name,\n        email: this.state.username,\n        password: this.state.password\n      };\n      console.log(userObject);\n      axios.post(\"\".concat(SERVER_HOST, \"/user/Register/\").concat(this.state.name, \"/\").concat(this.state.username, \"/\").concat(this.state.password), userObject).then(res => {\n        if (res.data) {\n          if (res.data.errorMessage) {\n            console.log(res.data.errorMessage);\n          } else {\n            console.log(\"User Registered and added\"); //sessionStorage.name = res.data.name\n            //sessionStorage.accessLevel = res.data.accessLevel\n\n            this.setState({\n              isRegistered: true\n            });\n          }\n        } else {\n          console.log(\"Registration failed\");\n        }\n      });\n    };\n\n    this.state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      isRegistered: false\n    };\n  }\n\n  render() {\n    return (\n      /*<div className=\"form-container\">\r\n          {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}\r\n            <Form>\r\n              <Form.Group controlId=\"name\">\r\n                  <Form.Label>Name</Form.Label>\r\n                  <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n              </Form.Group>\r\n                <Form.Group controlId=\"email\">\r\n                  <Form.Label>Email</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n              </Form.Group>\r\n                <Form.Group controlId=\"password\">\r\n                  <Form.Label>Password</Form.Label>\r\n                  <Form.Control type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n              </Form.Group>\r\n                <LinkInClass value=\"Add\" className=\"green-button\" onClick={this.handleSubmit}/>\r\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\r\n          </Form>\r\n      </div>*/\n      React.createElement(\"form\", {\n        className: \"form-container\",\n        noValidate: true,\n        id: \"loginOrRegistrationForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, this.state.isRegistered ? React.createElement(Redirect, {\n        to: \"/DisplayAllCars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }) : null, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"New User Registration\"), React.createElement(\"input\", {\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"Name\",\n        autoComplete: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        ref: input => {\n          this.inputToFocus = input;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Username\",\n        autoComplete: \"username\",\n        value: this.state.username,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Password\",\n        autoComplete: \"password\",\n        title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"confirmPassword\",\n        type: \"password\",\n        placeholder: \"Confirm password\",\n        autoComplete: \"confirmPassword\",\n        value: this.state.confirmPassword,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(LinkInClass, {\n        value: \"Register New User\",\n        className: \"green-button\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(Link, {\n        className: \"red-button\",\n        to: \"/DisplayAllCars\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Cancel\"))\n    );\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_client_side_react\\cars_react_app\\client\\src\\components\\Register.js"],"names":["React","Component","Redirect","Link","Form","axios","LinkInClass","SERVER_HOST","Register","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","userObject","state","email","username","password","console","log","post","then","res","data","errorMessage","isRegistered","confirmPassword","render","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport Form from \"react-bootstrap/Form\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nexport default class Register extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            confirmPassword:\"\",\r\n            isRegistered:false\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault()\r\n\r\n        const userObject = {\r\n            name: this.state.name,\r\n            email: this.state.username,\r\n            password: this.state.password\r\n        }\r\n\r\n        console.log(userObject);\r\n\r\n        axios.post(`${SERVER_HOST}/user/Register/${this.state.name}/${this.state.username}/${this.state.password}`, userObject)\r\n            .then(res =>\r\n            {\r\n                if(res.data)\r\n                {\r\n                    if (res.data.errorMessage)\r\n                    {\r\n                        console.log(res.data.errorMessage)\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"User Registered and added\")\r\n                        //sessionStorage.name = res.data.name\r\n                        //sessionStorage.accessLevel = res.data.accessLevel\r\n\r\n                        this.setState({isRegistered:true})\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Registration failed\")\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n        return (\r\n            /*<div className=\"form-container\">\r\n                {this.state.redirectToDisplayAllCars ? <Redirect to=\"/DisplayAllCars\"/> : null}\r\n\r\n                <Form>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"email\">\r\n                        <Form.Label>Email</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"password\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n\r\n                    <LinkInClass value=\"Add\" className=\"green-button\" onClick={this.handleSubmit}/>\r\n\r\n                    <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\r\n                </Form>\r\n            </div>*/\r\n\r\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\" onSubmit={this.handleSubmit}>\r\n\r\n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null}\r\n\r\n                <h2>New User Registration</h2>\r\n\r\n                <input\r\n                    name = \"name\"\r\n                    type = \"text\"\r\n                    placeholder = \"Name\"\r\n                    autoComplete=\"name\"\r\n                    value = {this.state.name}\r\n                    onChange = {this.handleChange}\r\n                    ref = {(input) => { this.inputToFocus = input }}\r\n                /><br/>\r\n\r\n                <input\r\n                    name = \"username\"\r\n                    type = \"text\"\r\n                    placeholder = \"Username\"\r\n                    autoComplete=\"username\"\r\n                    value = {this.state.username}\r\n                    onChange = {this.handleChange}\r\n                /><br/>\r\n\r\n                <input\r\n                    name = \"password\"\r\n                    type = \"password\"\r\n                    placeholder = \"Password\"\r\n                    autoComplete=\"password\"\r\n                    title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\r\n                    value = {this.state.password}\r\n                    onChange = {this.handleChange}\r\n                /><br/>\r\n\r\n                <input\r\n                    name = \"confirmPassword\"\r\n                    type = \"password\"\r\n                    placeholder = \"Confirm password\"\r\n                    autoComplete=\"confirmPassword\"\r\n                    value = {this.state.confirmPassword}\r\n                    onChange = {this.handleChange}\r\n                /><br/><br/>\r\n\r\n                <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\r\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\r\n            </form>\r\n\r\n\r\n\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}