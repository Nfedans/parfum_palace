{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\cars_client_side_react\\\\cars_react_app\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport LinkInClass from \"../components/LinkInClass\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport { ACCESS_LEVEL_GUEST } from \"../config/global_constants\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      this.setState({\n        wasSubmittedAtLeastOnce: true\n      });\n      const formInputsState = this.validate();\n\n      if (Object.keys(formInputsState).every(index => formInputsState[index])) {\n        axios.defaults.withCredentials = true; // needed for sessions to work\n\n        axios.post(\"\".concat(SERVER_HOST, \"/user/Login/\").concat(this.state.username, \"/\").concat(this.state.password)).then(res => {\n          // default if not logged in\n          sessionStorage.name = \"GUEST\";\n          sessionStorage.accessLevel = ACCESS_LEVEL_GUEST; // guest has accessLevel of 0\n\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(\"UH OH\");\n              console.log(res.data.errorMessage);\n            } else // user successfully logged in\n              {\n                console.log(\"User logged in\");\n                sessionStorage.name = res.data.name;\n                sessionStorage.accessLevel = res.data.accessLevel;\n                this.setState({\n                  isLoggedIn: true\n                });\n              }\n          } else {\n            console.log(\"Login failed\");\n          }\n        });\n      } else // invalid inputs in form\n        {\n          e.preventDefault();\n          return;\n        }\n    };\n\n    this.state = {\n      //email:\"\",\n      username: \"\",\n      password: \"\",\n      wasSubmittedAtLeastOnce: false,\n      isLoggedIn: false\n    };\n  }\n\n  validatePassword() {\n    const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/; //eslint-disable-line\n\n    return pattern.test(String(this.state.password));\n  }\n\n  validate() {\n    return {\n      username: this.username,\n      password: this.validatePassword()\n    };\n  }\n\n  render() {\n    let errorMessage = \"\";\n\n    if (this.state.wasSubmittedAtLeastOnce) {\n      errorMessage = React.createElement(\"div\", {\n        className: \"error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Login Details are incorrect\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Login\"), this.state.isLoggedIn ? React.createElement(Redirect, {\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }) : null, errorMessage, React.createElement(\"input\", {\n      type: \"username\",\n      name: \"username\",\n      placeholder: \"Username\",\n      autoComplete: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      autoComplete: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(LinkInClass, {\n      value: \"Login\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/DisplayAllCars\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Cancel\"));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\cars_client_side_react\\cars_react_app\\client\\src\\components\\Login.js"],"names":["React","Component","Redirect","Link","axios","LinkInClass","SERVER_HOST","ACCESS_LEVEL_GUEST","Login","constructor","props","handleChange","e","setState","target","name","value","handleSubmit","wasSubmittedAtLeastOnce","formInputsState","validate","Object","keys","every","index","defaults","withCredentials","post","state","username","password","then","res","sessionStorage","accessLevel","data","errorMessage","console","log","isLoggedIn","preventDefault","validatePassword","pattern","test","String","render"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nimport {ACCESS_LEVEL_GUEST} from \"../config/global_constants\"\r\n\r\n\r\nexport default class Login extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            //email:\"\",\r\n            username:\"\",\r\n            password:\"\",\r\n            wasSubmittedAtLeastOnce:false,\r\n            isLoggedIn:false\r\n        }\r\n    }\r\n\r\n\r\n    handleChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n\r\n   /* handleSubmit = (e) =>\r\n    {\r\n        axios.defaults.withCredentials = true\r\n        axios.post(`${SERVER_HOST}/user/Login/${this.state.username}/${this.state.password}`)\r\n            .then(res =>\r\n            {\r\n                if(res.data)\r\n                {\r\n                    if (res.data.errorMessage)\r\n                    {\r\n                        console.log(res.data.errorMessage)\r\n                    }\r\n                    else // user successfully logged in\r\n                    {\r\n                        console.log(\"User logged in\")\r\n\r\n                        sessionStorage.name = res.data.name\r\n                        sessionStorage.accessLevel = res.data.accessLevel\r\n\r\n                        this.setState({isLoggedIn:true})\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Login failed\")\r\n                }\r\n            })\r\n    }*/\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        this.setState({ wasSubmittedAtLeastOnce: true })\r\n        const formInputsState = this.validate()\r\n\r\n        if (Object.keys(formInputsState).every(index => formInputsState[index]))\r\n        {\r\n            axios.defaults.withCredentials = true // needed for sessions to work\r\n            axios.post(`${SERVER_HOST}/user/Login/${this.state.username}/${this.state.password}`)\r\n                .then(res =>\r\n                {\r\n                    // default if not logged in\r\n                    sessionStorage.name = \"GUEST\"\r\n                    sessionStorage.accessLevel = ACCESS_LEVEL_GUEST // guest has accessLevel of 0\r\n                    if(res.data)\r\n                    {\r\n                        if (res.data.errorMessage)\r\n                        {\r\n                            console.log(\"UH OH\")\r\n                            console.log(res.data.errorMessage)\r\n                        }\r\n                        else // user successfully logged in\r\n                        {\r\n                            console.log(\"User logged in\")\r\n\r\n                            sessionStorage.name = res.data.name\r\n                            sessionStorage.accessLevel = res.data.accessLevel\r\n\r\n                            this.setState({isLoggedIn:true})\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"Login failed\")\r\n                    }\r\n                })\r\n        }\r\n        else // invalid inputs in form\r\n        {\r\n            e.preventDefault()\r\n            return\r\n        }\r\n    }\r\n\r\n\r\n\r\n    validatePassword()\r\n    {\r\n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/  //eslint-disable-line\r\n        return pattern.test(String(this.state.password))\r\n    }\r\n\r\n\r\n    validate()\r\n    {\r\n        return {\r\n            username: this.username,\r\n            password: this.validatePassword()\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        let errorMessage = \"\"\r\n        if(this.state.wasSubmittedAtLeastOnce)\r\n        {\r\n            errorMessage = <div className=\"error\">Login Details are incorrect<br/></div>\r\n        }\r\n\r\n\r\n        return (\r\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n                <h2>Login</h2>\r\n\r\n                {this.state.isLoggedIn ? <Redirect to=\"/DisplayAllCars\"/> : null}\r\n\r\n                {errorMessage}\r\n\r\n\r\n                <input\r\n                    type = \"username\"\r\n                    name = \"username\"\r\n                    placeholder = \"Username\"\r\n                    autoComplete=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.handleChange}\r\n                /><br/>\r\n\r\n                <input\r\n                    type = \"password\"\r\n                    name = \"password\"\r\n                    placeholder = \"Password\"\r\n                    autoComplete=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handleChange}\r\n                /><br/><br/>\r\n\r\n                <LinkInClass value=\"Login\" className=\"green-button\" onClick={this.handleSubmit}/>\r\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>\r\n            </form>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}